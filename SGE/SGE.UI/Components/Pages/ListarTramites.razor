@page "/listarTramites"
@rendermode InteractiveServer
@inject IJSRuntime JsRuntime;
@inject CasoDeUsoListarTramites listarTramites
@inject CasoDeUsoTramiteBaja tramiteBaja

<table class="table">
   <thead>
       <tr>
           <th>Id</th>
           <th>Id Exp Asociado</th>
           <th>Tipo de tramite</th>
           <th>Contenido</th>
           <th>FyH creacion</th>
           <th>FyH modificacion</th>
           <th>Editar</th>
           <th>Eliminar</th>
       </tr>
   </thead>
    <tbody>
       @foreach (var t in lista)
       {
            <tr>
                <td>@t.Id</td>
                <td>@t.IdExpediente</td>
                <td>@t.TipoTramite</td>
                <td>@t.Contenido</td>
                <td>@t.FechaHoraCreacion</td>
                <td>@t.FechaHoraModificacion</td>
                <td>
                    <button class="btn btn-primary">
                        Editar
                    </button></td>
                <td>
                    <button class="btn btn-danger" @onclick="()=>ConfirmarEliminacion(t)">
                        Eliminar
                    </button>
                </td>
           </tr>
       }
   </tbody>
</table>

@code {
    List<Tramite> lista = new List<Tramite>();

    protected override void OnInitialized()
    {
        if (listarTramites != null)
        {
            lista = listarTramites.Ejecutar();
        }
    }

/*
    DialogoConfirmacion dialogo = null!;

    Tramite? tramiteAEliminar = null;

    private void ConfirmarEliminacion(Tramite t)
    {
        tramiteAEliminar = t;
        dialogo.Mensaje = $"¿Desea eliminar al cliente {t.Id} {t.TipoTramite} {t.Contenido}?";
        dialogo.Mostrar();
    }

    private void Eliminar()
    {
        if(tramiteAEliminar != null)
        {
            tramiteBaja.Ejecutar(t.Id, 1);
            lista = listarTramites.Ejecutar();
        }
    }
    */
    private void ConfirmarEliminacion(Tramite t)
    {
        tramiteBaja.Ejecutar(t.Id, 1);
        lista = listarTramites.Ejecutar();
    }
}
