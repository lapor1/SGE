@page "/listarTramites"
@rendermode InteractiveServer
@inject CasoDeUsoListarTramites listarTramites
@inject IJSRuntime JsRuntime;
@inject CasoDeUsoTramiteBaja tramiteBaja
@inject NavigationManager Navegador
@inject Logger log
@inject IServicioAutorizacion ServicioAutorizacion

@if(log.Logueado)
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Id Exp Asociado</th>
                <th>Tipo de tramite</th>
                <th>Contenido</th>
                <th>FyH creacion</th>
                <th>FyH modificacion</th>
                <th>Accion</th>
            </tr>
        </thead>
            <tbody>
            @foreach (var t in lista)
            {
                    <tr>
                        <td>@t.Id</td>
                        <td>@t.IdExpediente</td>
                        <td>@t.TipoTramite</td>
                        <td>@t.Contenido</td>
                        <td>@t.FechaHoraCreacion</td>
                        <td>@t.FechaHoraModificacion</td>
                        
                        <td>
                            <button class="btn btn-primary" @onclick="()=>ModificarTramite(t)">
                                Editar
                            </button>
                            <button class="btn btn-danger" @onclick="()=>ConfirmarEliminacion(t)">
                                Eliminar
                            </button>
                        </td>
                                
                </tr>
            }
        </tbody>
    </table>

    <button class="btn btn-danger" @onclick="()=>AgregarTramite()">
        Nuevo
    </button>

    <h2 class="text-danger text-center">@mensaje</h2>
}
else
{
    <MensajeNoLogueado/>
}



@code {
    List<Tramite> lista = new List<Tramite>();
    string mensaje = "";
    protected override void OnInitialized()
    {     
        lista = listarTramites.Ejecutar();      
    }
    private void ConfirmarEliminacion(Tramite t)
    {
        if( ServicioAutorizacion.PoseeElPermiso(log.IdUsuario, Permiso.TramiteBaja) ){
            tramiteBaja.Ejecutar(t.Id, log.IdUsuario);
            lista = listarTramites.Ejecutar();
        }
        else 
        {
            mensaje = "No posee el permiso para dar de baja un Tramite";
            Console.WriteLine(mensaje);
        }
    }

    void ModificarTramite(Tramite t)
    {
        if( ServicioAutorizacion.PoseeElPermiso(log.IdUsuario, Permiso.TramiteModificacion) ){
            mensaje = "";
            Navegador.NavigateTo($"tramite/{t.Id}");
        }
        else 
        {
            mensaje = "No posee el permiso para modificar un Tramite";
            Console.WriteLine(mensaje);
        }
    }

    void AgregarTramite()
    {
        if( ServicioAutorizacion.PoseeElPermiso(log.IdUsuario, Permiso.TramiteAlta) ){
            mensaje = "";
            Navegador.NavigateTo("tramite");
        }
        else 
        {
            mensaje = "No posee el permiso para agregar un Tramite";
            Console.WriteLine(mensaje);
        }
    }
    /* ------------------------------------- Intentamos hacer un dialogo de confirmacion como en la teroria, pero no sabemos pq no funciona asi que lo postergamos
    DialogoConfirmacion dialogo = null!;
    Tramite? tramiteAEliminar = null;
    private void ConfirmarEliminacion(Tramite t)
    {
        tramiteAEliminar = t;
        dialogo.Mensaje = $"¿Desea eliminar al cliente {t.Id} {t.TipoTramite} {t.Contenido}?";
        dialogo.Mostrar();
    }

    private void Eliminar()
    {
        if(tramiteAEliminar != null)
        {
            tramiteBaja.Ejecutar(t.Id, 1);
            lista = listarTramites.Ejecutar();
        }
    }
    */
}
